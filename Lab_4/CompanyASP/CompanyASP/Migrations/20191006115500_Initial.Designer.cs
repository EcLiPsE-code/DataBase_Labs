// <auto-generated />
using System;
using CompanyASP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CompanyASP.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20191006115500_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CompanyASP.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("FullName");

                    b.Property<decimal>("Profit");

                    b.Property<decimal>("Salary");

                    b.Property<int?>("UnitID");

                    b.HasKey("EmployeeID");

                    b.HasIndex("UnitID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CompanyASP.Models.EmployeeFact", b =>
                {
                    b.Property<int>("EmployeeFactID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeID");

                    b.Property<string>("FullName");

                    b.Property<decimal>("ProfitQuarter");

                    b.Property<decimal>("ProfitYear");

                    b.Property<int>("Quarter");

                    b.Property<int>("Year");

                    b.HasKey("EmployeeFactID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("EmployeeFacts");
                });

            modelBuilder.Entity("CompanyASP.Models.EmployeePlan", b =>
                {
                    b.Property<int>("EmployeePlanID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeFactID");

                    b.Property<string>("FullName");

                    b.Property<decimal>("ProfitQuarter");

                    b.Property<decimal>("ProfitYear");

                    b.Property<int>("Quarter");

                    b.Property<int>("Year");

                    b.HasKey("EmployeePlanID");

                    b.HasIndex("EmployeeFactID");

                    b.ToTable("EmployeePlans");
                });

            modelBuilder.Entity("CompanyASP.Models.ProgressEmployee", b =>
                {
                    b.Property<int>("ProgressEmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeID");

                    b.Property<string>("FullName");

                    b.Property<string>("Progress");

                    b.HasKey("ProgressEmployeeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("ProgressEmployees");
                });

            modelBuilder.Entity("CompanyASP.Models.Unit", b =>
                {
                    b.Property<int>("UnitID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountEmployee");

                    b.Property<string>("FullName");

                    b.HasKey("UnitID");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("CompanyASP.Models.UnitValuationFact", b =>
                {
                    b.Property<int>("UnitValuationFactID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName");

                    b.Property<decimal>("Profit");

                    b.Property<decimal>("Salary");

                    b.Property<int>("UnitID");

                    b.HasKey("UnitValuationFactID");

                    b.HasIndex("UnitID");

                    b.ToTable("UnitValuationFacts");
                });

            modelBuilder.Entity("CompanyASP.Models.UnitValuationPlan", b =>
                {
                    b.Property<int>("UnitValuationPlanID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName");

                    b.Property<decimal>("Profit");

                    b.Property<decimal>("Salary");

                    b.Property<int>("UnitValuationFactID");

                    b.HasKey("UnitValuationPlanID");

                    b.HasIndex("UnitValuationFactID");

                    b.ToTable("UnitValuationPlans");
                });

            modelBuilder.Entity("CompanyASP.Models.Employee", b =>
                {
                    b.HasOne("CompanyASP.Models.Unit")
                        .WithMany("Employees")
                        .HasForeignKey("UnitID");
                });

            modelBuilder.Entity("CompanyASP.Models.EmployeeFact", b =>
                {
                    b.HasOne("CompanyASP.Models.Employee", "Employee")
                        .WithMany("EmployeeFacts")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CompanyASP.Models.EmployeePlan", b =>
                {
                    b.HasOne("CompanyASP.Models.EmployeeFact", "EmployeeFact")
                        .WithMany("EmployeePlans")
                        .HasForeignKey("EmployeeFactID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CompanyASP.Models.ProgressEmployee", b =>
                {
                    b.HasOne("CompanyASP.Models.Employee", "Employee")
                        .WithMany("ProgressEmployees")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CompanyASP.Models.UnitValuationFact", b =>
                {
                    b.HasOne("CompanyASP.Models.Unit", "Unit")
                        .WithMany("UnitValuationFacts")
                        .HasForeignKey("UnitID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CompanyASP.Models.UnitValuationPlan", b =>
                {
                    b.HasOne("CompanyASP.Models.UnitValuationFact", "UnitValuationFact")
                        .WithMany("UnitValuationPlans")
                        .HasForeignKey("UnitValuationFactID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
